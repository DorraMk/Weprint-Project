{"version":3,"sources":["file.service.ts"],"names":["core_1","require","FileService","http","this","server","prototype","upload","formData","post","reportProgress","observe","download","filename","get","responseType","__decorate","Injectable","providedIn","exports"],"mappings":"6YACA,IAAAA,OAAAC,QAAA,iBAMAC,YAAA,WAGE,SAAAA,EAAoBC,GAAAC,KAAAD,KAAAA,EAFZC,KAAAC,OAAS,wBAqBnB,OAhBEH,EAAAI,UAAAC,OAAA,SAAOC,GACL,OAAOJ,KAAKD,KAAKM,KAAkBL,KAAKC,OAAM,eAAgBG,EAAU,CACtEE,gBAAgB,EAChBC,QAAS,YAKbT,EAAAI,UAAAM,SAAA,SAASC,GACP,OAAOT,KAAKD,KAAKW,IAAOV,KAAKC,OAAM,kBAAkBQ,EAAQ,IAAK,CAChEH,gBAAgB,EAChBC,QAAS,SACTI,aAAc,UAlBPb,EAAWc,WAAA,CAHvBhB,OAAAiB,WAAW,CACVC,WAAY,UAEDhB,GAAb,GAAaiB,QAAAjB,YAAAA","file":"file.service.min.js","sourcesContent":["import { HttpClient, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n  private server = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) {}\n\n  // define function to upload files\n  upload(formData: FormData): Observable<HttpEvent<string[]>> {\n    return this.http.post<string[]>(`${this.server}/file/upload`, formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n  // define function to download files\n  download(filename: string): Observable<HttpEvent<Blob>> {\n    return this.http.get(`${this.server}/file/download/${filename}/`, {\n      reportProgress: true,\n      observe: 'events',\n      responseType: 'blob'\n    });\n  }\n  \n}\n"]}